<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="4E#s,f*7zD|m=o2J!J1b">players</variable><variable id="UfW?`h$Oj+]jYqA6)VM|">p</variable><variable id="w*MFz+qu)25G085C*Ub=">q</variable><variable id="_KBZd{+wLzQhir~I{7GX">r</variable><variable id="ttvN5dQ)}kd)47M7hGW3">patientZero</variable><variable id="14%IA?}_C|b4n=xrV!xz">state</variable><variable id="i7~B9{#_7[r%T#s:Y7k+">master</variable><variable id="%2$%3j:Cts08zvLc8zKD">paired</variable><variable id="adN?HeL9J1qJh#cnql2o">signal</variable><variable id="T0w%Kw_%.)wFB(;Q4d2~">INCUBATION</variable><variable id="M4+F7i$INS:DipnJ*x_G">DEATH</variable><variable id="8u)o#XBOG,b]xj*S^Et{">RSSI</variable><variable id="*4!^+r+2C8{C2vAg_|w0">TRANSMISSIONPROB</variable><variable id="lG7Y+eTjx;bS/{`@r2C%">playerIcons</variable><variable id="C4wNXqRDxcm*?Jfr|M,N">infectedBy</variable><variable id="EDMHfwWso}=pgxjn7Llw">playerIcon</variable></variables><comment id="sz([EFLm^Oan:n~7$/3E" minimized="true" data="2" x="574" y="-405" h="127" w="137">player state</comment><comment id="qj+~iA}D3{ps??8lsP=3" minimized="true" data="1" x="838" y="-316" h="227" w="52">master state</comment><comment id="J=z[*C.V,4x*jjwoZ]vN" data="0" x="654" y="286" h="847" w="452">Infection game&#10;&#10;Flash all micro:bits with this script&#10;&#10;Press A+B to enter master mode (1 per game)&#10;&#10;Wait for players to be paired. The number of paired player will display on screen.&#10;An icon will appear on player's screen.&#10;&#10;Press A+B to start the infection game. The master will pick a random&#10;player as patient zero.&#10;&#10;A player will transmit the disease if close enough (RSSI)&#10;and with a certain probability (TRANSMISSIONPROB).&#10;During the incudation phase (INCUBATION), the player does not show any sign&#10;of illness. After that phase, the sad face shows up.&#10;&#10;The game will automatically stop once all players are dead or healthy. The master can&#10;also press A+B again to stop the game.&#10;&#10;Once the game is over, the micro:bit will show the player id (A,B,C...), health and&#10;who infected him.&#10;&#10;Icons used in the game:&#10;&#10;Pairing: IconNames.Ghost&#10;Paired: IconNames.Happy&#10;Dead: IconNames.Skull&#10;Sick: IconNames.Sad&#10;Incubating: IconNames.Confused&#10;Healthy: IconNames.Happy</comment><block type="device_print_message" id="kID`Vj8nkj+MykX;yd05" disabled="true" x="240" y="-47"><value name="text"><shadow type="text" id="]1xseTGV7,Ws3PW@qoZU"><field name="TEXT">ir ao site https://makecode.microbit.org/projects/infection para ver as regras e como funciona</field></shadow></value></block><block type="pxt-on-start" id="ZQZx4`3p*z7b@_ujF{Vq" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="BP({IcNwX5/$}ZO@;Wn1" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let infectedTime = 0" numlines="1" declaredvars="infectedTime"></mutation><next><block type="typescript_statement" id=";)F9,wI$JEif0}4]zTE-" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let paired = false" numlines="1" declaredvars="paired"></mutation><next><block type="typescript_statement" id="Q{kjYy^7;{w8x.Vdq~CM" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let players: Player[] = []" numlines="1" declaredvars="players"></mutation><next><block type="variables_set" id="KobqS?#KO2oZ@QBy[y/C"><field name="VAR" id="T0w%Kw_%.)wFB(;Q4d2~">INCUBATION</field><comment>time before showing symptoms</comment><data>0</data><value name="VALUE"><shadow type="math_number" id="~F$8/Qk|d7WgzY881+dY"><field name="NUM">20000</field></shadow></value><next><block type="variables_set" id="c/,=;q_-ez;IgwvJ0mZ/"><field name="VAR" id="M4+F7i$INS:DipnJ*x_G">DEATH</field><comment>time before dying off the disease</comment><value name="VALUE"><shadow type="math_number" id="aV=kxrj1KP9P)0KHaOQ!"><field name="NUM">40000</field></shadow></value><next><block type="variables_set" id=";HJ2F3[v/:.:M$q`:w/+"><field name="VAR" id="8u)o#XBOG,b]xj*S^Et{">RSSI</field><comment>db</comment><value name="VALUE"><shadow type="math_number" id="e_4|7Sv5Lg*kL))zlyE*"><field name="NUM">-45</field></shadow></value><next><block type="variables_set" id="b@elh|FS`*C=BF7V6KjW"><field name="VAR" id="*4!^+r+2C8{C2vAg_|w0">TRANSMISSIONPROB</field><comment>% probability to transfer disease</comment><value name="VALUE"><shadow type="math_number" id="KI9K$p}mMZN6qq:@][b2"><field name="NUM">40</field></shadow></value><next><block type="typescript_statement" id="YYhZsD(jM3qgq.if#q4d" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum GameState {" line1="    Stopped," line2="    Pairing," line3="    Infecting," line4="    Running," line5="    Over" line6="}" numlines="7"></mutation><next><block type="typescript_statement" id="Pel3?ge#L3GlOGxg($9;" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum HealthState {" line1="    Healthy," line2="    Incubating," line3="    Sick," line4="    Dead" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="r74BI|7(`X$/}UU;DE);" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum MessageKind {" line1="    PairRequest," line2="    PairConfirmation," line3="    HealthSet," line4="    HealthValue," line5="    InitialInfect," line6="    TransmitVirus," line7="    GameState" line8="}" numlines="9"></mutation><next><block type="typescript_statement" id="$hdA^*Z`7K8{JRHaLt;u" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const GameIcons = {" line1="    Pairing: IconNames.Ghost," line2="    Paired: IconNames.Happy," line3="    Dead: IconNames.Skull," line4="    Sick: IconNames.Sad," line5="    Incubating: IconNames.Confused," line6="    Healthy: IconNames.Happy" line7="}" numlines="8" declaredvars="GameIcons"></mutation><next><block type="typescript_statement" id="J`6~^`jZn:_zNo{uWT8$" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Message {" line1="" line2="    private _data: Buffer;" line3="" line4="    constructor(input?: Buffer) {" line5="        this._data = input || control.createBuffer(13);" line6="    }" line7="" line8="    get kind(): number {" line9="        return this._data.getNumber(NumberFormat.Int8LE, 0);" line10="    }" line11="" line12="    set kind(x: number) {" line13="        this._data.setNumber(NumberFormat.Int8LE, 0, x);" line14="    }" line15="" line16="    get fromSerialNumber(): number {" line17="        return this._data.getNumber(NumberFormat.Int32LE, 1);" line18="    }" line19="" line20="    set fromSerialNumber(x: number) {" line21="        this._data.setNumber(NumberFormat.Int32LE, 1, x);" line22="    }" line23="" line24="    get value(): number {" line25="        return this._data.getNumber(NumberFormat.Int32LE, 5);" line26="    }" line27="" line28="    set value(x: number) {" line29="        this._data.setNumber(NumberFormat.Int32LE, 5, x);" line30="    }" line31="" line32="    get toSerialNumber(): number {" line33="        return this._data.getNumber(NumberFormat.Int32LE, 9);" line34="    }" line35="" line36="    set toSerialNumber(x: number) {" line37="        this._data.setNumber(NumberFormat.Int32LE, 9, x);" line38="    }" line39="" line40="    send() {" line41="        radio.sendBuffer(this._data);" line42="        basic.pause(250);" line43="    }" line44="}" numlines="45"></mutation><next><block type="variables_set" id="`T}Q*GgwQzPZD!ALJeum"><field name="VAR" id="lG7Y+eTjx;bS/{`@r2C%">playerIcons</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="text" id="pNI?DKLp9}Q9azkRPzS`"><field name="TEXT">ABCDEFGHIJKLMNOPQRSTUVWXYZ</field></block></value><next><block type="typescript_statement" id="^v-,kt=;84lm:k,(Oi5g" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Player {" line1="    id: number;" line2="    icon: number;" line3="    health: HealthState;" line4="    show() {" line5="        basic.showString(playerIcons[this.icon]);" line6="    }" line7="}" numlines="8"></mutation><next><block type="typescript_statement" id="!%u(89?:XoeZ|44Jq],B" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let state = GameState.Stopped;" numlines="1" declaredvars="state"></mutation><next><block type="typescript_statement" id="ADsLFz|5`HjrVA2QAH;D" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let patientZero: Player;" numlines="1" declaredvars="patientZero"></mutation><next><block type="variables_set" id="F:X2E4|2mxA6*KUg*2F)"><field name="VAR" id="C4wNXqRDxcm*?Jfr|M,N">infectedBy</field><comment>who infected (playerIcon)</comment><value name="VALUE"><shadow type="math_number" id="sZ#y6WyQ)^X,T[tfJWw)"><field name="NUM">-1</field></shadow></value><next><block type="variables_set" id="#FCVqe7^paW4({M9J2zp"><field name="VAR" id="EDMHfwWso}=pgxjn7Llw">playerIcon</field><comment>local time when infection happened&#10;player icon and identity</comment><value name="VALUE"><shadow type="math_number" id="#-Q{r_tn#7|;}jaAV=6S"><field name="NUM">-1</field></shadow></value><next><block type="typescript_statement" id="X!b~(|T^yVqk(aZB6Q=S" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let health = HealthState.Healthy;" numlines="1" declaredvars="health"></mutation><next><block type="radio_set_group" id="WuU}M8@kC{oEM-;gqluz"><value name="ID"><shadow type="math_number_minmax" id="hz4OO%EX:PJMHkCUXjj)"><mutation min="0" max="255" label="Number" precision="0"/><field name="SLIDER">42</field></shadow></value><next><block type="typescript_statement" id="e%WOXh)tLj!U5t$zUUMW" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="basic.showIcon(GameIcons.Pairing)" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="qsBYHE!p9_Hi@E.C)0t`" x="1179" y="20"><mutation name="player" functionid="0Tz@5BbEpS-34,9o-3fR"><arg name="id" id="gv0uyb6qfhh21idn87c2g" type="number"/></mutation><field name="function_name">player</field><comment>get a player instance (creates one as needed)</comment><statement name="STACK"><block type="pxt_controls_for_of" id="ay/WobEo@{$O7vAY+pUF"><value name="VAR"><shadow type="variables_get_reporter" id="3IF0S4jh~?=N-+`i-v,@"><field name="VAR" id="UfW?`h$Oj+]jYqA6)VM|">p</field></shadow></value><value name="LIST"><block type="variables_get" id="ZCzP6@3q9Ol|_Ay:t%Dz"><field name="VAR" id="4E#s,f*7zD|m=o2J!J1b">players</field></block></value><statement name="DO"><block type="controls_if" id="!J74wvsEq(8tNZ%*u(F."><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="Ech+2Py`V*xbA_Y`2Btf"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="LO)~XZkCU0d+R+Bvl3.w" editable="false"><field name="EXPRESSION">p.id</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id="4ckW(J|C(F~Ai%{HQVN="><field name="VALUE">id</field></block></value></block></value><statement name="DO0"><block type="function_return" id="OmGu`yT1LP7ccxd`6su7"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="Y=%0+1JTe=CV3{$Zc(tr"><field name="VAR" id="UfW?`h$Oj+]jYqA6)VM|">p</field></block></value></block></statement></block></statement><next><block type="typescript_statement" id="h^wPawUIQ)xe]v]wCnQR" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let q = new Player();" numlines="1" declaredvars="q"></mutation><next><block type="typescript_statement" id="MDPpA0ng`q24Yg1LPXAX" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.id = id;" numlines="1"></mutation><next><block type="typescript_statement" id="+nJu-a/w!X(IyAq6;v#9" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.icon = (players.length + 1) % playerIcons.length;" numlines="1"></mutation><next><block type="typescript_statement" id="v(D6W?;*yxrGy.!e@FnT" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.health = HealthState.Healthy;" numlines="1"></mutation><next><block type="array_push" id="f8|w}[:q56mNhT+pasc."><value name="list"><block type="variables_get" id="8WpgZOPwbmTHEfz0UZ%s"><field name="VAR" id="4E#s,f*7zD|m=o2J!J1b">players</field></block></value><value name="value"><block type="variables_get" id="-gTfRL)unozj_u7Hdx|6"><field name="VAR" id="w*MFz+qu)25G085C*Ub=">q</field></block></value><next><block type="serial_writeline" id="%,uZd@ZjBe5Q[AF]/YGi"><value name="text"><block type="typescript_expression" id="FQzG{P2mI_P;2L%jC8nu" editable="false"><field name="EXPRESSION">`player ==&gt; ${q.id}`</field></block></value><next><block type="function_return" id="$=L)(xw?Ck[}p[)Z2%]b"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="#9|dM@d2.hU{J)oNSWvi"><field name="VAR" id="w*MFz+qu)25G085C*Ub=">q</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="FTxrXfwCSHiWA`3l8NtD" x="1756" y="20"><mutation name="allDead" functionid="Erpy~CjQ:awOCE(8oBxp"/><field name="function_name">allDead</field><statement name="STACK"><block type="pxt_controls_for_of" id="-e++pTrnXLe0,Rsq^W}:"><value name="VAR"><shadow type="variables_get_reporter" id="{x-fN8XrC!E9_;iA8*S|"><field name="VAR" id="_KBZd{+wLzQhir~I{7GX">r</field></shadow></value><value name="LIST"><block type="variables_get" id=")OS05wx_=P=a?Q~|c$;%"><field name="VAR" id="4E#s,f*7zD|m=o2J!J1b">players</field></block></value><statement name="DO"><block type="controls_if" id="psm(sYEp};}0fRU^eC_8"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="si9s/p|oOK5HnuLq6KeL"><field name="OP">NEQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="J*PK?Hxw5;$5G{=KC6Gn" editable="false"><field name="EXPRESSION">r.health</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="47^;A6c@Fr+2{wotmoG-" editable="false"><field name="EXPRESSION">HealthState.Dead</field></block></value></block></value><statement name="DO0"><block type="function_return" id="H|-7vcOT2P:m%yADH.PZ"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="t,[|bFGmUlg~pB|Ax4!d"><field name="BOOL">FALSE</field></block></value></block></statement></block></statement><next><block type="function_return" id="*|4:[*G@w%Bfj-_$u*,u"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="yzPY:K[jwWw`Hj}se,H7"><field name="BOOL">TRUE</field></block></value></block></next></block></statement></block><block type="function_definition" id="GwgJd#4K^AWS^rbngh@Y" x="2444" y="20"><mutation name="gameOver" functionid="Xhbm:#r0/_)dWu,QCEOH"/><field name="function_name">gameOver</field><statement name="STACK"><block type="typescript_statement" id="[:RQjZ(:@p8=Ow`@5`EZ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Over;" numlines="1"></mutation><next><block type="controls_if" id="NOy%{;Ok4eKit3uxIhy;"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="()k46OyKh+q*N$jUO54u"><field name="VAR" id="ttvN5dQ)}kd)47M7hGW3">patientZero</field></block></value><statement name="DO0"><block type="typescript_statement" id="|maP!r]}Q?QSG)t9B(xd" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="patientZero.show();" numlines="1"></mutation></block></statement></block></next></block></statement></block><block type="function_definition" id="Cl:Je#q(Q`i#+)Jr^m?X" x="2815" y="20"><mutation name="gameFace" functionid="?$k:Wi{=+=F)!k~;0A]p"/><field name="function_name">gameFace</field><statement name="STACK"><block type="typescript_statement" id="y*pzX`-mcbWSB#JxoV}C" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="        case GameState.Stopped:" line2="            basic.showIcon(GameIcons.Pairing);" line3="            break;" line4="        case GameState.Pairing:" line5="            if (playerIcon &gt; -1)" line6="                basic.showString(playerIcons[playerIcon]);" line7="            else" line8="                basic.showIcon(paired ? GameIcons.Paired : GameIcons.Pairing, 1);" line9="            break;" line10="        case GameState.Infecting:" line11="        case GameState.Running:" line12="            switch (health) {" line13="                case HealthState.Dead:" line14="                    basic.showIcon(GameIcons.Dead, 1);" line15="                    break;" line16="                case HealthState.Sick:" line17="                    basic.showIcon(GameIcons.Sick, 1);" line18="                    break;" line19="                default:" line20="                    basic.showIcon(GameIcons.Healthy, 1);" line21="                    break;" line22="            }" line23="            break;" line24="        case GameState.Over:" line25="            // show id" line26="            basic.showString(playerIcons[playerIcon]);" line27="            basic.pause(2000);" line28="            // show health" line29="            switch (health) {" line30="                case HealthState.Dead:" line31="                    basic.showIcon(GameIcons.Dead, 2000);" line32="                    break;" line33="                case HealthState.Sick:" line34="                    basic.showIcon(GameIcons.Sick, 2000);" line35="                    break;" line36="                case HealthState.Incubating:" line37="                    basic.showIcon(GameIcons.Incubating, 2000);" line38="                    break;" line39="                default:" line40="                    basic.showIcon(GameIcons.Healthy, 2000);" line41="                    break;" line42="            }" line43="            // show how infected" line44="            if (infectedBy &gt; -1) {" line45="                basic.showString(&quot; INFECTED BY&quot;);" line46="                basic.showString(playerIcons[infectedBy]);" line47="                basic.pause(2000);" line48="            } else {" line49="                basic.showString(&quot; PATIENT ZERO&quot;);" line50="                basic.pause(2000);" line51="            }" line52="            // show score" line53="            game.showScore();" line54="            basic.pause(1000);" line55="            break;" line56="    }" numlines="57"></mutation></block></statement></block><block type="device_button_event" id="s[;Y48yS;,pI8oE|e!{(" x="3656" y="20"><field name="NAME">Button.AB</field><statement name="HANDLER"><block type="controls_if" id="_M1V3MevA?LsjrWiE9}O"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="$zMr{QmRIpY$JOg1J7Z7"><field name="OP">AND</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="7+/ev,U}a+WT%}6sbEj%"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="WJ,m$saJKXgf.KaypDE;"><field name="VAR" id="14%IA?}_C|b4n=xrV!xz">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="#FKxv2/B*jo!Sn;0#V%d" editable="false"><field name="EXPRESSION">GameState.Stopped</field></block></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="!HZIt1aj)YJBoGE?;`,G"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="`|e:M2!z,tCa|B/3tH$*"><field name="VAR" id="i7~B9{#_7[r%T#s:Y7k+">master</field></block></value></block></value></block></value><statement name="DO0"><block type="variables_set" id="vf;?mPNC.~dGYtCsORX@"><field name="VAR" id="i7~B9{#_7[r%T#s:Y7k+">master</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="b[9?~oD`|p9rpv!Qk:yi"><field name="BOOL">TRUE</field></block></value><next><block type="variables_set" id="YhVLa6-M9?M!h3rL^6c3"><field name="VAR" id="%2$%3j:Cts08zvLc8zKD">paired</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="g4SGC)LM?,CR~:^Fy=fq"><field name="BOOL">TRUE</field></block></value><next><block type="typescript_statement" id="w)Lf}qGxk-T`lW08%ja^" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Pairing;" numlines="1"></mutation><next><block type="serial_writeline" id="z4hDSCw,ycIyPXgQn+zK"><value name="text"><shadow type="text" id="*qK?x4knV;BVfZz4VynH"><field name="TEXT">registered as master</field></shadow></value><next><block type="radio_set_transmit_power" id="F%H5(_8K*wCgI;(GJ+#!"><value name="power"><shadow type="math_number_minmax" id="kCGj5moVSw},qm.t]$^6"><mutation min="0" max="7" label="Number" precision="0"/><field name="SLIDER">7</field></shadow></value><next><block type="device_print_message" id="*Os1/i@3J-fzGwWAl$xp"><value name="text"><shadow type="text" id="S=9o`A.4O{^aH:SgUX@8"><field name="TEXT">0</field></shadow></value><next><block type="typescript_statement" id="!S_qSpo~o2Zyy7;,mT^l" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return;" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type="controls_if" id="$otlgeAibz([EoTwDH~z"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="kaUR|D6*5yGV%P2c3n^;"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="pf!9qJZ:*6c_BPFGCD]z"><field name="VAR" id="i7~B9{#_7[r%T#s:Y7k+">master</field></block></value></block></value><statement name="DO0"><block type="typescript_statement" id="Dgk+4%zz=MB/LCG~x4Dr" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return;" numlines="1"></mutation></block></statement><next><block type="controls_if" id="f9`|Dzv##A#Dgj^h2L9-"><mutation elseif="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="(,_(%*[4fPqlG]mV%|U|"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="oW+@hlmD`Yq2nSL;2$,8"><field name="VAR" id="14%IA?}_C|b4n=xrV!xz">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="+b-JL#+|QE{zf8aj%1pK" editable="false"><field name="EXPRESSION">GameState.Pairing</field></block></value></block></value><statement name="DO0"><block type="variables_set" id="@H1=bRZ[y(bso)-5#CL."><field name="VAR" id="ttvN5dQ)}kd)47M7hGW3">patientZero</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="Jx|Z}VJFTFl9;U[8/J^`"><value name="LIST"><block type="variables_get" id="vz@6={+?BO;~q_Vj,JYv"><field name="VAR" id="4E#s,f*7zD|m=o2J!J1b">players</field></block></value><value name="INDEX"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_random" id="cmq@Uzf%fFsF#HsfeNx*"><value name="min"><shadow type="math_number" id="HJuesu63@Df;j6fZxiaT"><field name="NUM">0</field></shadow></value><value name="limit"><block type="math_arithmetic" id="u+Sru~%nP%~H~{$C}_pb"><field name="OP">MINUS</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_length" id=":D@tIA)3ds5oOG6Jqzxx"><value name="VALUE"><block type="variables_get" id="khB#hkYN-k,-Aqca0*L*"><field name="VAR" id="4E#s,f*7zD|m=o2J!J1b">players</field></block></value></block></value><value name="B"><shadow type="math_number" id="N*i{2Ts-{$|@d^(]m-=H"><field name="NUM">1</field></shadow></value></block></value></block></value></block></value><next><block type="typescript_statement" id="wcoE#sDt-%;V0(4%gL~X" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Infecting;" numlines="1"></mutation><next><block type="serial_writeline" id="(w`B`tw_P,iZ)=e1m;jz"><value name="text"><block type="typescript_expression" id="OgGz4h0|SsaB*f{d${xl" editable="false"><field name="EXPRESSION">`game started ${players.length} players`</field></block></value></block></next></block></next></block></statement><value name="IF1"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="hJg;)E{BE#cx}wWp:N~)"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="oIBc$7W_Iof1!k@6l^1e"><field name="VAR" id="14%IA?}_C|b4n=xrV!xz">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="4|sz(*xok`Nbo(^ynOVh" editable="false"><field name="EXPRESSION">GameState.Running</field></block></value></block></value><statement name="DO1"><block type="function_call" id="rk.sZ^z:nTVmn0}+FH[|"><mutation name="gameOver" functionid="Xhbm:#r0/_)dWu,QCEOH"/></block></statement></block></next></block></next></block></statement></block><block type="radio_on_buffer_drag" id="cuMYM(Z*#kSo|u={/Y#+" x="5021" y="20"><value name="HANDLER_DRAG_PARAM_receivedBuffer"><shadow type="argument_reporter_custom" id="gR0l2P6z#HzF%yMzOzDN"><mutation typename="Buffer"/><field name="VALUE">receivedBuffer</field></shadow></value><statement name="HANDLER"><block type="typescript_statement" id="C@WHk)U}V|D:||OfjIYR" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const incomingMessage = new Message(receivedBuffer);" numlines="1" declaredvars="incomingMessage"></mutation><next><block type="variables_set" id="z|_veLSeWoSkLSIjwH*1"><field name="VAR" id="adN?HeL9J1qJh#cnql2o">signal</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="radio_received_packet" id="p-6hM,_dqHR*stPpRWQ="><value name="type"><shadow type="radio_packet_property" id="(6NWjibPERW1nZZz~|o;"><field name="note">RadioPacketProperty.SignalStrength</field></shadow></value></block></value><next><block type="controls_if" id="RtU[_Z.Ca9}SMf.t)H.S"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="}/dPP[.ZX:^3zm{,$nh+"><field name="VAR" id="i7~B9{#_7[r%T#s:Y7k+">master</field></block></value><statement name="DO0"><block type="typescript_statement" id="x1bRxa3[=4)q*Q|vibH+" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (incomingMessage.kind) {" line1="            case MessageKind.PairRequest:" line2="                // register player" line3="                let n = players.length;" line4="                player(incomingMessage.fromSerialNumber);" line5="                // show player number if changed" line6="                if (n != players.length) {" line7="                    basic.showNumber(players.length);" line8="                }" line9="                break;" line10="            case MessageKind.HealthValue:" line11="                let s = player(incomingMessage.fromSerialNumber);" line12="                s.health = incomingMessage.value;" line13="                // check if all infected" line14="                if (allDead())" line15="                    gameOver();" line16="                break;" line17="        }" numlines="18"></mutation></block></statement><statement name="ELSE"><block type="typescript_statement" id="[z)|=2(hijWx?*v=e^wR" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (incomingMessage.kind) {" line1="            case MessageKind.GameState:" line2="                // update game state" line3="                state = incomingMessage.value as GameState;" line4="                break;" line5="            case MessageKind.InitialInfect:" line6="                if (infectedBy &lt; 0 &amp;&amp;" line7="                    incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line8="                    // infected by master" line9="                    infectedBy = 0; // infected my master" line10="                    infectedTime = input.runningTime();" line11="                    health = HealthState.Incubating;" line12="                    serial.writeLine(`infected ${control.deviceSerialNumber()}`);" line13="                }" line14="                break;" line15="            case MessageKind.HealthSet:" line16="                if (incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line17="                    const newHealth = incomingMessage.value;" line18="                    if (health &lt; newHealth) {" line19="                        health = newHealth;" line20="                    }" line21="                }" line22="                break;" line23="            case MessageKind.PairConfirmation:" line24="                if (!paired &amp;&amp; state == GameState.Pairing &amp;&amp;" line25="                    incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line26="                    // paired!" line27="                    serial.writeLine(`player paired ==&gt; ${control.deviceSerialNumber()}`)" line28="                    playerIcon = incomingMessage.value;" line29="                    paired = true;" line30="                }" line31="                break;" line32="            case MessageKind.TransmitVirus:" line33="                if (state == GameState.Running) {" line34="                    if (health == HealthState.Healthy) {" line35="                        serial.writeLine(`signal: ${signal}`);" line36="                        if (signal &gt; RSSI &amp;&amp;" line37="                            randint(0, 100) &gt; TRANSMISSIONPROB) {" line38="                            infectedBy = incomingMessage.value;" line39="                            infectedTime = input.runningTime();" line40="                            health = HealthState.Incubating;" line41="                        }" line42="                    }" line43="                }" line44="                break;" line45="            case MessageKind.HealthValue:" line46="                if (health != HealthState.Dead &amp;&amp; signal &gt; RSSI) {" line47="                    game.addScore(1);" line48="                }" line49="                break;" line50="        }" numlines="51"></mutation></block></statement></block></next></block></next></block></statement></block><block type="device_forever" id="(er{NEY_k[usp:lZTa=Q" x="6001" y="20"><statement name="HANDLER"><block type="typescript_statement" id=",y;Mbktk.pm`JuPy{HG]" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let message: Message;" numlines="1" declaredvars="message"></mutation><next><block type="controls_if" id="HXv}q@e5nd:boh@,[W54"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="qxu?*$0?(oVel3CtHlGs"><field name="VAR" id="i7~B9{#_7[r%T#s:Y7k+">master</field></block></value><statement name="DO0"><block type="typescript_statement" id="(S}c_Rsatu5t0qal$vWa" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="            case GameState.Pairing:" line2="                // tell each player they are registered" line3="                for (const t of players) {" line4="                    message = new Message();" line5="                    message.kind = MessageKind.PairConfirmation;" line6="                    message.value = t.icon;" line7="                    message.toSerialNumber = t.id;" line8="                    message.send();" line9="                }" line10="                serial.writeLine(`pairing ${players.length} players`);" line11="                basic.pause(500);" line12="                break;" line13="            case GameState.Infecting:" line14="                if (patientZero.health == HealthState.Healthy) {" line15="                    message = new Message();" line16="                    message.kind = MessageKind.InitialInfect;" line17="                    message.toSerialNumber = patientZero.id;" line18="                    message.send();" line19="                    basic.pause(100);" line20="                } else {" line21="                    serial.writeLine(`patient ${patientZero.id} infected`);" line22="                    // show startup" line23="                    basic.showIcon(GameIcons.Dead);" line24="                    state = GameState.Running;" line25="                }" line26="                break;" line27="            case GameState.Running:" line28="                for (const u of players) {" line29="                    message = new Message();" line30="                    message.kind = MessageKind.HealthSet;" line31="                    message.value = u.health;" line32="                    message.toSerialNumber = u.id;" line33="                    message.send();" line34="                }" line35="                break;" line36="            case GameState.Over:" line37="                if (patientZero)" line38="                    patientZero.show();" line39="                break;" line40="        }" numlines="41"></mutation><next><block type="typescript_statement" id="(Y|JA3H[Z}Cxnyh@%H:+" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message = new Message()" numlines="1"></mutation><next><block type="typescript_statement" id="|Z=FCF4Y7/qE/)r2L)GI" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.kind = MessageKind.GameState;" numlines="1"></mutation><next><block type="typescript_statement" id="FigXj4Dj{9eaoq;n*eXF" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.value = state;" numlines="1"></mutation><next><block type="typescript_statement" id="Q?/jrY~l(5u9bMd,v`Sb" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.send();" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></statement><statement name="ELSE"><block type="typescript_statement" id="pJ0u2mV3uhhboPvd90M8" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="            case GameState.Pairing:" line2="                // broadcast player id" line3="                if (playerIcon &lt; 0) {" line4="                    message = new Message();" line5="                    message.kind = MessageKind.PairRequest;" line6="                    message.fromSerialNumber = control.deviceSerialNumber();" line7="                    message.send();" line8="                } else if (infectedBy &gt; -1) {" line9="                    message = new Message();" line10="                    message.kind = MessageKind.HealthValue;" line11="                    message.fromSerialNumber = control.deviceSerialNumber();" line12="                    message.value = health;" line13="                    message.send();" line14="                }" line15="                break;" line16="            case GameState.Infecting:" line17="                message = new Message();" line18="                message.kind = MessageKind.HealthValue;" line19="                message.fromSerialNumber = control.deviceSerialNumber();" line20="                message.value = health;" line21="                message.send();" line22="                break;" line23="            case GameState.Running:" line24="                // update health status" line25="                if (health != HealthState.Healthy &amp;&amp; input.runningTime() - infectedTime &gt; DEATH)" line26="                    health = HealthState.Dead;" line27="                else if (health != HealthState.Healthy &amp;&amp; input.runningTime() - infectedTime &gt; INCUBATION)" line28="                    health = HealthState.Sick;" line29="                // transmit disease" line30="                if (health == HealthState.Incubating || health == HealthState.Sick) {" line31="                    message = new Message();" line32="                    message.kind = MessageKind.TransmitVirus;" line33="                    message.fromSerialNumber = control.deviceSerialNumber();" line34="                    message.value = playerIcon;" line35="                    message.send();" line36="                }" line37="                message = new Message();" line38="                message.kind = MessageKind.HealthValue;" line39="                message.fromSerialNumber = control.deviceSerialNumber();" line40="                message.value = health;" line41="                message.send();" line42="                break;" line43="        }" numlines="44"></mutation><next><block type="function_call" id="Igl/O%V9rH0p0BbRm(Tr"><mutation name="gameFace" functionid="?$k:Wi{=+=F)!k~;0A]p"/></block></next></block></statement></block></next></block></statement></block></xml>